.
├── app/
│   └── backend/
│       ├── .dockerignore
│       ├── .env.example
│       ├── Dockerfile
│       ├── langgraph.json
│       ├── openapi.json
│       ├── README.md
│       ├── azure_search_token_provider.py
│       ├── rag/
│       │   └── api/
│       │       └── routes/
│       │           └── rag_app.py
│       ├── tests/
│       │   ├── test_integration.py
│       │   ├── test_rag.py
│       │   ├── test_similar_docs.py
│       │   └── __init__.py
│       ├── docs/
│       │   ├── api-docs.md
│       │   ├── logging.md
│       │   └── testing.md
│       └── app/
│           ├── api/
│           │   ├── openapi.py
│           │   ├── routes/
│           │   │   ├── agent_rest.py
│           │   │   ├── dependencies.py
│           │   │   ├── health.py
│           │   │   ├── model_utils.py
│           │   │   ├── storage.py
│           │   │   └── __init__.py
│           │   └── __init__.py
│           ├── config.py
│           ├── core/
│           │   ├── __init__.py
│           │   ├── db/
│           │   │   ├── mongo_repository.py
│           │   │   └── repository.py
│           │   ├── documents.py
│           │   ├── evaluation.py
│           │   ├── security/
│           │   │   ├── authorization/
│           │   │   │   ├── base.py
│           │   │   │   ├── langgraph_auth.py
│           │   │   │   └── __init__.py
│           │   │   └── __init__.py
│           │   └── storage/
│           │       ├── azure.py
│           │       ├── base.py
│           │       └── __init__.py
│           ├── dependencies.py
│           ├── log_config.yaml
│           ├── main.py
│           ├── models.py
│           ├── my_agent/
│           │   ├── agent.py
│           │   ├── utils/
│           │   │   ├── nodes.py
│           │   │   ├── state.py
│           │   │   ├── tools.py
│           │   │   └── __init__.py
│           │   └── __init__.py
│           ├── tests/
│           │   ├── test_authorization.py
│           │   ├── test_documents.py
│           │   ├── test_evaluation.py
│           │   ├── test_langgraph_flows.py
│           │   ├── test_storage_views.py
│           │   └── __init__.py
│           └── __init__.py
├── .devcontainer/
│   └── devcontainer.json
├── .gitattributes
├── .gitignore
├── .gitlab-ci.yml
├── .pre-commit-config.yaml
├── .vscode/
│   ├── extensions.json
│   ├── launch.json
│   ├── settings.json
│   └── tasks.json
├── bin/
│   └── register_azure_app.py
├── docs/
│   ├── authorization.md
│   ├── DOCS.md
│   ├── entraid-application-registration.md
│   └── images/
│       ├── agent_diagram.png
│       ├── azure_resources_layer_dependencies_white_bg.png
│       ├── scalar-hostname.png
│       ├── scalar-PKCE-scopes.png
│       └── scalar-post-authn.png
├── guards/
│   └── validators/
│       ├── toxic_words.py
│       └── __init__.py
├── infra/
│   ├── .terraform.lock.hcl
│   ├── .tflint.hcl
│   ├── build_publish_image.sh
│   ├── modules/
│   │   ├── container-app/
│   │   │   ├── main.tf
│   │   │   ├── outputs.tf
│   │   │   ├── providers.tf
│   │   │   └── variables.tf
│   │   ├── cosmos/
│   │   │   ├── main.tf
│   │   │   ├── outputs.tf
│   │   │   └── variables.tf
│   │   ├── security/
│   │   │   └── role/
│   │   │       ├── main.tf
│   │   │       └── variables.tf
│   │   └── storage/
│   │       ├── main.tf
│   │       ├── outputs.tf
│   │       └── variables.tf
│   ├── cicd-scripts/
│   │   ├── img/
│   │   │   └── container-apps-blue-green-deployment.png
│   │   ├── azd_extra_setup.sh
│   │   └── azd_setup.sh
│   ├── test_deployment.sh
│   ├── tf_backend.sh
│   └── traffic_switch.sh
├── main.tf
├── main.tfvars.json
├── output.tf
├── provider.tf
├── shared_services.tf
├── variables.tf
├── LICENSE
├── package-lock.json
├── pyproject.toml
├── README.md
├── resources/
│   ├── .spectral.yaml
│   └── chat_contract_openapi.yaml
├── uv.lock
├── app_registration.json
├── azure.yaml
└── temp.ipynb
























.
├── app/
│   └── backend/
│       ├── .dockerignore
│       ├── .env.example
│       ├── Dockerfile
│       ├── langgraph.json
│       ├── openapi.json
│       ├── README.md
│       ├── azure_search_token_provider.py
│       ├── guards/
│       │   ├── __init__.py
│       │   └── validators/
│       │       ├── toxic_words.py
│       │       └── __init__.py
│       ├── rag/
│       │   └── api/
│       │       └── routes/
│       │           └── rag_app.py
│       ├── tests/
│       │   ├── test_integration.py
│       │   ├── test_rag.py
│       │   ├── test_similar_docs.py
│       │   └── __init__.py
│       ├── docs/
│       │   ├── api-docs.md
│       │   ├── logging.md
│       │   └── testing.md
│       └── app/
│           ├── api/
│           │   ├── openapi.py
│           │   ├── routes/
│           │   │   ├── agent_rest.py
│           │   │   ├── dependencies.py
│           │   │   ├── health.py
│           │   │   ├── model_utils.py
│           │   │   ├── storage.py
│           │   │   └── __init__.py
│           │   └── __init__.py
│           ├── config.py
│           ├── core/
│           │   ├── __init__.py
│           │   ├── db/
│           │   │   ├── mongo_repository.py
│           │   │   └── repository.py
│           │   ├── documents.py
│           │   ├── evaluation.py
│           │   ├── security/
│           │   │   ├── authorization/
│           │   │   │   ├── base.py
│           │   │   │   ├── langgraph_auth.py
│           │   │   │   └── __init__.py
│           │   │   └── __init__.py
│           │   └── storage/
│           │       ├── azure.py
│           │       ├── base.py
│           │       └── __init__.py
│           ├── dependencies.py
│           ├── log_config.yaml
│           ├── main.py
│           ├── models.py
│           ├── my_agent/
│           │   ├── agent.py
│           │   ├── utils/
│           │   │   ├── nodes.py
│           │   │   ├── state.py
│           │   │   ├── tools.py
│           │   │   └── __init__.py
│           │   └── __init__.py
│           ├── tests/
│           │   ├── test_authorization.py
│           │   ├── test_documents.py
│           │   ├── test_evaluation.py
│           │   ├── test_langgraph_flows.py
│           │   ├── test_storage_views.py
│           │   └── __init__.py
│           └── __init__.py
├── .devcontainer/
│   └── devcontainer.json
├── .gitattributes
├── .gitignore
├── .gitlab-ci.yml
├── .pre-commit-config.yaml
├── .vscode/
│   ├── extensions.json
│   ├── launch.json
│   ├── settings.json
│   └── tasks.json
├── bin/
│   └── register_azure_app.py
├── docs/
│   ├── authorization.md
│   ├── DOCS.md
│   ├── entraid-application-registration.md
│   └── images/
│       ├── agent_diagram.png
│       ├── azure_resources_layer_dependencies_white_bg.png
│       ├── scalar-hostname.png
│       ├── scalar-PKCE-scopes.png
│       └── scalar-post-authn.png
├── infra/
│   ├── .terraform.lock.hcl
│   ├── .tflint.hcl
│   ├── build_publish_image.sh
│   ├── modules/
│   │   ├── container-app/
│   │   │   ├── main.tf
│   │   │   ├── outputs.tf
│   │   │   ├── providers.tf
│   │   │   └── variables.tf
│   │   ├── cosmos/
│   │   │   ├── main.tf
│   │   │   ├── outputs.tf
│   │   │   └── variables.tf
│   │   ├── security/
│   │   │   └── role/
│   │   │       ├── main.tf
│   │   │       └── variables.tf
│   │   └── storage/
│   │       ├── main.tf
│   │       ├── outputs.tf
│   │       └── variables.tf
│   ├── cicd-scripts/
│   │   ├── img/
│   │   │   └── container-apps-blue-green-deployment.png
│   │   ├── azd_extra_setup.sh
│   │   └── azd_setup.sh
│   ├── test_deployment.sh
│   ├── tf_backend.sh
│   └── traffic_switch.sh
├── main.tf
├── main.tfvars.json
├── output.tf
├── provider.tf
├── shared_services.tf
├── variables.tf
├── LICENSE
├── package-lock.json
├── pyproject.toml
├── README.md
├── resources/
│   ├── .spectral.yaml
│   └── chat_contract_openapi.yaml
├── uv.lock
├── app_registration.json
├── azure.yaml
└── temp.ipynb
















.
├── app/
│   └── backend/
│       ├── .dockerignore
│       ├── .env.example
│       ├── Dockerfile
│       ├── langgraph.json
│       ├── openapi.json
│       ├── README.md
│       ├── azure_search_token_provider.py
│       ├── guards/
│       │   ├── __init__.py
│       │   └── validators/
│       │       ├── toxic_words.py
│       │       └── __init__.py
│       ├── rag/
│       │   ├── __init__.py
│       │   └── api/
│       │       ├── __init__.py
│       │       └── routes/
│       │           ├── __init__.py
│       │           └── rag_app.py
│       ├── tests/
│       │   ├── test_integration.py
│       │   ├── test_rag.py
│       │   ├── test_similar_docs.py
│       │   └── __init__.py
│       ├── docs/
│       │   ├── api-docs.md
│       │   ├── logging.md
│       │   └── testing.md
│       └── app/
│           ├── api/
│           │   ├── openapi.py
│           │   ├── routes/
│           │   │   ├── agent_rest.py
│           │   │   ├── dependencies.py
│           │   │   ├── health.py
│           │   │   ├── model_utils.py
│           │   │   ├── storage.py
│           │   │   └── __init__.py
│           │   └── __init__.py
│           ├── config.py
│           ├── core/
│           │   ├── __init__.py
│           │   ├── db/
│           │   │   ├── mongo_repository.py
│           │   │   └── repository.py
│           │   ├── documents.py
│           │   ├── evaluation.py
│           │   ├── security/
│           │   │   ├── authorization/
│           │   │   │   ├── base.py
│           │   │   │   ├── langgraph_auth.py
│           │   │   │   └── __init__.py
│           │   │   └── __init__.py
│           │   └── storage/
│           │       ├── azure.py
│           │       ├── base.py
│           │       └── __init__.py
│           ├── dependencies.py
│           ├── log_config.yaml
│           ├── main.py
│           ├── models.py
│           ├── my_agent/
│           │   ├── agent.py
│           │   ├── utils/
│           │   │   ├── nodes.py
│           │   │   ├── state.py
│           │   │   ├── tools.py
│           │   │   └── __init__.py
│           │   └── __init__.py
│           ├── tests/
│           │   ├── test_authorization.py
│           │   ├── test_documents.py
│           │   ├── test_evaluation.py
│           │   ├── test_langgraph_flows.py
│           │   ├── test_storage_views.py
│           │   └── __init__.py
│           └── __init__.py
├── .devcontainer/
│   └── devcontainer.json
├── .gitattributes
├── .gitignore
├── .gitlab-ci.yml
├── .pre-commit-config.yaml
├── .vscode/
│   ├── extensions.json
│   ├── launch.json
│   ├── settings.json
│   └── tasks.json
├── bin/
│   └── register_azure_app.py
├── docs/
│   ├── authorization.md
│   ├── DOCS.md
│   ├── entraid-application-registration.md
│   └── images/
│       ├── agent_diagram.png
│       ├── azure_resources_layer_dependencies_white_bg.png
│       ├── scalar-hostname.png
│       ├── scalar-PKCE-scopes.png
│       └── scalar-post-authn.png
├── infra/
│   ├── .terraform.lock.hcl
│   ├── .tflint.hcl
│   ├── build_publish_image.sh
│   ├── modules/
│   │   ├── container-app/
│   │   │   ├── main.tf
│   │   │   ├── outputs.tf
│   │   │   ├── providers.tf
│   │   │   └── variables.tf
│   │   ├── cosmos/
│   │   │   ├── main.tf
│   │   │   ├── outputs.tf
│   │   │   └── variables.tf
│   │   ├── security/
│   │   │   └── role/
│   │   │       ├── main.tf
│   │   │       └── variables.tf
│   │   └── storage/
│   │       ├── main.tf
│   │       ├── outputs.tf
│   │       └── variables.tf
│   ├── cicd-scripts/
│   │   ├── img/
│   │   │   └── container-apps-blue-green-deployment.png
│   │   ├── azd_extra_setup.sh
│   │   └── azd_setup.sh
│   ├── test_deployment.sh
│   ├── tf_backend.sh
│   └── traffic_switch.sh
├── main.tf
├── main.tfvars.json
├── output.tf
├── provider.tf
├── shared_services.tf
├── variables.tf
├── LICENSE
├── package-lock.json
├── pyproject.toml
├── README.md
├── resources/
│   ├── .spectral.yaml
│   └── chat_contract_openapi.yaml
├── uv.lock
├── app_registration.json
├── azure.yaml
└── temp.ipynb












import logging
import os
from datetime import datetime

# FORCE RESET all existing loggers
for handler in logging.root.handlers[:]:
    logging.root.removeHandler(handler)

os.makedirs("logs", exist_ok=True)
log_filename = f"logs/search_agent_{datetime.now().strftime('%Y%m%d_%H%M%S')}.log"

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(log_filename, mode='w'),
        logging.StreamHandler()
    ],
    force=True  # ← This overrides ALL other basicConfig calls
)

logger = logging.getLogger(__name__)
logger.info("=== CLIENT DEMO STARTED ===")


























def _extract_official_domain(
    self, workplace_results: List[Dict[str, Any]], workplace_name: str = ""
) -> Optional[str]:
    """Extract official domain from workplace search results - SAFE VERSION"""
    
    try:
        # Safety check for empty results
        if not workplace_results:
            logger.warning("No workplace results provided for domain extraction")
            return None
        
        # Create workplace keywords for domain matching
        workplace_keywords = []
        if workplace_name:
            words = workplace_name.lower().split()
            workplace_keywords = [
                word for word in words
                if len(word) >= 4 and word not in [
                    "foundation", "fondazione", "institute", "istituto",
                    "hospital", "ospedale", "university", "universita", 
                    "center", "centre", "medical", "clinic", "clinica",
                ]
            ]
        
        # Process each result safely
        for result in workplace_results:
            if not result:  # Skip empty results
                continue
                
            url = result.get("url", "")
            content = result.get("content", "")
            title = result.get("title", "")
            
            # Combine content for analysis
            full_text = f"{title} {content}".lower()
            
            # ... REST OF YOUR EXISTING DOMAIN EXTRACTION LOGIC ...
            # (Keep all your existing domain matching code here)
        
        return None  # No domain found
        
    except Exception as e:
        logger.error(f"Error in domain extraction: {str(e)}")
        return None
